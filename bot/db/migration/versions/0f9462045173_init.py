"""init

Revision ID: 0f9462045173
Revises: 
Create Date: 2024-08-02 10:28:38.520551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0f9462045173'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_user',
    sa.Column('telegram_id', sa.BIGINT(), nullable=False),
    sa.Column('registered_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('login', sa.VARCHAR(), nullable=True),
    sa.Column('receive_notifications', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.Column('monitoring_runs_job', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('notification_name', sa.TEXT(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('user_notifications',
    sa.Column('bot_user_id', sa.BIGINT(), nullable=False),
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bot_user_id'], ['bot_user.telegram_id'], ),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.notification_id'], ),
    sa.PrimaryKeyConstraint('bot_user_id', 'notification_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_notifications')
    op.drop_table('notifications')
    op.drop_table('bot_user')
    # ### end Alembic commands ###
